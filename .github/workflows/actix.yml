name: Actix CI/CD pipeline

on:
  pull_request:
    branches:
      - main  # Trigger the workflow when a PR is created targeting the main branch

  push:
    branches:
      - main  # Trigger the workflow when changes are pushed to the main branch (after merge)

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Rust
        uses: actions/setup-rust@v1
        with:
          rust-version: stable

      - name: Build the project
        run: |
          cd ./actix
          cargo build --release

      - name: Run tests
        run: |
          cd ./actix
          cargo test

  deploy_docker:
    needs: build  # Ensure that deploy happens only after the build job is successful
    runs-on: ubuntu-20.04
    if: github.event_name == 'push'  # Ensure deploy only happens on push (not on PR)
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          docker build -t mqtt_actix_image:latest ./actix

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: |
          docker tag mqtt_actix_image:latest lp02781/mqtt_actix_image:latest
          docker push lp02781/mqtt_actix_image:latest

      - name: Deploy to production
        run: |
          echo "Deploying the Docker image to production..."
          # Add your deployment scripts here (e.g., Docker, AWS, Kubernetes)
